@using System.Reflection
@using Figase.Context;
@using System.Security.Claims
@using Figase.Enums
@using Figase.Utils
@model PersonViewModel
@{
    ViewData["Title"] = $"Профиль ({(Model == null ? "Неизвестная жаба" : Model.FirstName)})";
}
@section Scripts {
<script type="text/javascript">
    $(document).ready(function() {

    });

    function sendPost() {
        var msg = $('#Message').val();
        if (msg) {
            $.post('@(Url.Action("SendNewPost", "Home", null))', { Message: msg }, function(response) {
            alert("Успешно!");
            window.location.reload();
          }).fail(function(response) {
            alert("Ошибка " + response.status + "!");
          });
        }
    }
</script>
}
<div class="search-panel">
    <h3>Профиль пользователя</h3>
    <div class="row">
        <div class="nav-block">
            @if (!User.Identity.IsAuthenticated)
            {
                <span><b>Пользователь не авторизован</b> </span>
                <a asp-area="" asp-controller="Home" asp-action="Login">Вход</a>
            }
            else
            {
                <span><b>@(User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Name)?.Value ?? "Unknown")</b> </span>
                <a asp-controller="Home" asp-action="Profile">Профиль</a>
                <a asp-controller="Home" asp-action="Search">На главную</a>
                <a asp-controller="Home" asp-action="Logout">Выйти</a>
            }
        </div>
        <div class="col-md-12">
            <form>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="FirstName" class="control-label"></label>
                            <input asp-for="FirstName" class="form-control" maxlength="100" readonly />
                        </div>
                        <div class="form-group">
                            <label asp-for="LastName" class="control-label"></label>
                            <input asp-for="LastName" class="form-control" maxlength="100" readonly />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="City" class="control-label"></label>
                            <input asp-for="City" class="form-control" maxlength="100" readonly />
                        </div>
                        <div class="form-group">
                            <label asp-for="Age" class="control-label"></label>
                            <input asp-for="Age" class="form-control" maxlength="100" readonly />
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label asp-for="Gender" class="control-label"></label>
                            @{
                                <input class="form-control" maxlength="100" name="Gender" id="Gender" readonly value="@Model.Gender.GetDescription()" />
                            }
                        </div>
                        <div class="form-group">
                            <label asp-for="Hobby" class="control-label"></label>
                            @{
                                var personHobbies = new List<HobbiesKinds>();
                                foreach (var item in Enum.GetValues(typeof(HobbiesKinds)).Cast<HobbiesKinds>().Skip(1)) if (Model.Hobby.HasFlag(item)) personHobbies.Add(item);
                                //<span>@string.Join(", ", personHobbies.Select(h => h.GetDescription()))</span>
                                <input class="form-control" maxlength="100" name="Hobby" id="Hobby" readonly value="@string.Join(", ", personHobbies.Select(h => h.GetDescription()))" />
                            }
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <hr />
    <h2>Посты</h2>
    @if (User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value == Model.Id.ToString())
    {
        <div class="new-post">
            <span>Что нового:</span>
            <div class="row">
                <div class="col-md-12">
                    <input type="text" id="Message" name="Message" class="form-control" maxlength="1000" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <input type="button" value="Отправить" class="btn btn-default" onclick="sendPost()" />
                </div>
            </div>
        </div>
    }
    @if (Model.Posts == null || Model.Posts.Count == 0)
    {
        <div class="row post">
            Пока ничего нет
        </div>
    }
    else
    {
        foreach (var post in Model.Posts)
        {
            <div class="row post" title="ID: @post.Id">
                <span class="post-created">@post.Created</span> @post.Content
            </div>
        }
    }
    <hr />
    <h2>Новости</h2>
    @if (Model.SubPosts == null || Model.SubPosts.Count == 0)
    {
        <div class="row">
            Новостей от других пользователей нет (нужно подписаться на них)
        </div>
    }
    else
    {
        foreach (var post in Model.SubPosts)
        {
            <div class="row post" title="ID: @post.Id">
                <span class="post-created">@post.Created</span> <span title="Источник" class="post-person">@post.PersonId</span> @post.Content
            </div>
        }
    }
</div>
